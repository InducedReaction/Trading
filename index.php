<?php
include_once'connect.php';
if(isset($_GET['code'])){
	$code1 = urldecode($_GET['code']);
	
	echo "<br>" . htmlspecialchars($code1) . "<br>"; // Output sanitized code

// Prepare Authorization header
$authHeader = "Authorization: Basic " . base64_encode($clientid . ":" . $secret);

// cURL setup
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://api.schwabapi.com/v1/oauth/token');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_POST, 1);
$postFields = "grant_type=authorization_code&code=$code1&redirect_uri=" . urlencode('https://192.168.1.6/schwab');
curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
curl_setopt($ch, CURLOPT_HTTPHEADER, array($authHeader, 'Content-Type: application/x-www-form-urlencoded'));

$result = curl_exec($ch);
if (curl_errno($ch)) {
    echo 'Error:' . curl_error($ch);
} else {
    $data = json_decode($result, true);
    if (isset($data['error'])) {
        echo "Error: " . $data['error'];
    } else if (isset($data["access_token"])) {
        // Store tokens securely, handle response appropriately
        mysqli_query($link, "UPDATE `users` SET `access_token` = '{$data["access_token"]}', `refresh_token` = '{$data["refresh_token"]}', `expires_in` = '{$data["expires_in"]}', `refresh_token_expires_in` = '{$data["expires_in"]}' WHERE `users`.`id` = 1;");
    }
}
curl_close($ch);

//print($result);
$data = json_decode($result,true);

echo "<pre>" . json_encode($data, JSON_PRETTY_PRINT) . "</pre>";
//echo "<br>".

if(isset($data["access_token"])){
	$code1 = $data["access_token"];
	$processrandomid="initiallogin";
	tdsleep($processrandomid);
	//This one is for the balance I'm not good at curl 
	// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
	// Initial call to retrieve encrypted account numbers
	$base64Credentials = base64_encode($clientid . ':' . $secret);

	// Initialize cURL session
	$ch = curl_init();

	// Set cURL options
	curl_setopt($ch, CURLOPT_URL, 'https://api.schwabapi.com/trader/v1/accounts/accountNumbers');
	
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');

	// Set HTTP headers
	$headers = [
		'accept: application/json',
		// If authorization is required, you would also include the Authorization header here
		'Authorization: Bearer ' . $code1
	];
	curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

	// Execute cURL session
	$result = curl_exec($ch);

	// Check for errors and handle the response
	if (curl_errno($ch)) {
		echo 'Curl error: ' . curl_error($ch);
	} else {
		// Assuming the response is JSON, decode it
		$response = json_decode($result, true);
		//echo '<pre>';
		//print_r($response);
		//echo '</pre>';
	}

	// Close cURL session
	curl_close($ch);

	//echo $result;


	$data = json_decode($result,true);
	//$data=$data[0];//if you need this line it's because you're account number is not set
	echo $result;
	echo $data[0]['hashValue'];
	writetoaddress("accountnumber", $data[0]['hashValue']);
}

}else{
	$code1="";
	//echo $clientid;
	?>
   <a href="https://api.schwabapi.com/v1/oauth/authorize?response_type=code&client_id=<?php echo ($clientid) ?>&redirect_uri=<?php echo ("https://192.168.1.6/schwab")?>">LOGIN</a>
    <?php
}


//header('Location: hammer.php?code='.$code);


//echo $result;
?>


<?php
include_once'login.php';
?>
